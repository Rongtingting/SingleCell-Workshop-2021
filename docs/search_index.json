[["copy-number-variation-estimation-from-scrna-seq.html", "Chapter 5 Copy number variation estimation from scRNA-seq 5.1 Method: inferCNV 5.2 Application on TNBC1 5.3 ref", " Chapter 5 Copy number variation estimation from scRNA-seq Rongting Huang 2021-06-29 5.1 Method: inferCNV InferCNV: Inferring copy number alterations from tumor single cell RNA-Seq data 5.1.1 install inferCNV Software Requirements JAGS R (&gt;3.6) In order to run infercnv, JAGS (Just Another Gibbs Sampler) must be installed. Download JAGS from https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/ and install JAGS in your environment (windows/MAC). If you use inferCNV on server, install JAGS via conda install in your conda environment is recommended. conda install -c conda-forge jags More details refer to inferCNV wiki page Five options for installing inferCNV Option A: Install infercnv from BioConductor (preferred) if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;infercnv&quot;) For more other options, refer to Five options for installing inferCNV Data requirements a raw counts matrix of single-cell RNA-Seq expression an annotations file which indicates which cells are tumor vs. normal. a gene/chromosome positions file File-Definitions 5.1.2 getting started If you have installed infercnv from BioConductor, you can run the example data with: library(infercnv) infercnv_obj = CreateInfercnvObject(raw_counts_matrix=system.file(&quot;extdata&quot;, &quot;oligodendroglioma_expression_downsampled.counts.matrix.gz&quot;, package = &quot;infercnv&quot;), annotations_file=system.file(&quot;extdata&quot;, &quot;oligodendroglioma_annotations_downsampled.txt&quot;, package = &quot;infercnv&quot;), delim=&quot;\\t&quot;, gene_order_file=system.file(&quot;extdata&quot;, &quot;gencode_downsampled.EXAMPLE_ONLY_DONT_REUSE.txt&quot;, package = &quot;infercnv&quot;), ref_group_names=c(&quot;Microglia/Macrophage&quot;,&quot;Oligodendrocytes (non-malignant)&quot;)) infercnv_obj = infercnv::run(infercnv_obj, cutoff=1, # cutoff=1 works well for Smart-seq2, and cutoff=0.1 works well for 10x Genomics out_dir=tempfile(), cluster_by_groups=TRUE, denoise=TRUE, HMM=TRUE) If you can run the getting started part with demo data provided by inferCNV, then it is installed successfully. demo 5.2 Application on TNBC1 5.2.1 data description 5.2.2 run inferCNV ################# ##HUANG Rongting ##2021-0629 ################# ## load the package library(Seurat) library(infercnv) ## prepare the data ### load count matrix matrix_path &lt;- &quot;/groups/cgsd/yuanhua/CPOS_Data_20210317/10X5RNA_SS-181003-01a/cellranger/GX001_1m30/count_GX001_1m30/outs/filtered_gene_bc_matrices/GRCh38/&quot; anno_file &lt;- &#39;/groups/cgsd/rthuang/processed_data/inferCNV/GX001/gx001_celltype&#39; gene_file &lt;- &#39;/groups/cgsd/rthuang/processed_data/inferCNV/hg38/gene_note_noheader_unique.txt&#39; ### read count matrix gex_mtx &lt;- Seurat::Read10X(data.dir = matrix_path) ### run inferCNV with loop # cells = c(&#39;Chief&#39;, &#39;M&#39;, &#39;unclassified&#39;)#gx109 celltype = c(&#39;Enterocyte&#39;, &#39;PMC&#39;, &#39;Stem&#39;, &#39;Tuft&#39;, &#39;unclassified&#39;) for (i in celltype){ infercnv_obj1 = CreateInfercnvObject(raw_counts_matrix=gex_mtx, annotations_file=anno_file, delim=&#39;\\t&#39;, gene_order_file=gene_file, ref_group_names=c(i)) output &lt;- paste0(&#39;/groups/cgsd/rthuang/processed_data/inferCNV/GX001/&#39;,&#39;gx001_&#39;, i) infercnv_obj1 = infercnv::run(infercnv_obj1, cutoff=0.1, out_dir= output , cluster_by_groups=T, denoise=T, HMM=T) } 5.3 ref https://www.r-bloggers.com/2012/04/getting-started-with-jags-rjags-and-bayesian-modelling/ "]]
